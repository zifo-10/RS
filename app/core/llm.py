from typing import Optional

from openai import OpenAI
from pydantic import Field, BaseModel


class LLMResponse(BaseModel):
    answer: str = Field(description="The response generated by the LLM model.")
    item_id: Optional[str] = Field(description="The ID of the item in the database.")


class LLM:
    def __init__(self, api_key: str):
        self.llm_client = OpenAI(api_key=api_key)

    def generate_response(self, system: str, user: str):
        completion = self.llm_client.beta.chat.completions.parse(
            model="o1",
            messages=[
                {"role": "system", "content": system},
                {"role": "user", "content": user},
            ],
            response_format=LLMResponse
        )
        return completion.choices[0].message.parsed
